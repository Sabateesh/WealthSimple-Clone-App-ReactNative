{"version":3,"sources":["hexToRgba.ts"],"names":["hexToRgba","hex","alpha","r","parseInt","slice","g","b"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAgCC,KAAhC,EAA+C;AACpD,QAAMC,CAAC,GAAGC,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAlB;AACA,QAAMC,CAAC,GAAGF,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAlB;AACA,QAAME,CAAC,GAAGH,QAAQ,CAACH,GAAG,CAACI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,EAAkB,EAAlB,CAAlB;;AAEA,MAAIH,KAAK,GAAG,CAAZ,EAAe;AACb,WAAQ,QAAOC,CAAE,KAAIG,CAAE,KAAIC,CAAE,KAAIL,KAAM,GAAvC;AACD;;AAED,SAAQ,OAAMC,CAAE,KAAIG,CAAE,KAAIC,CAAE,GAA5B;AACD","sourcesContent":["export function hexToRgba(hex: string, alpha: number) {\n  const r = parseInt(hex.slice(1, 3), 16)\n  const g = parseInt(hex.slice(3, 5), 16)\n  const b = parseInt(hex.slice(5, 7), 16)\n\n  if (alpha > 0) {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`\n  }\n\n  return `rgb(${r}, ${g}, ${b})`\n}\n"]}