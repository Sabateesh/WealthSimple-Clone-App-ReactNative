"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StaticLineGraph = StaticLineGraph;

var _reactNativeSkia = require("@shopify/react-native-skia");

var _getSixDigitHex = require("./utils/getSixDigitHex");

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _CreateGraphPath = require("./CreateGraphPath");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function StaticLineGraph(_ref) {
  let {
    points: allPoints,
    range,
    color,
    lineThickness = 3,
    enableFadeInMask,
    style,
    ...props
  } = _ref;
  const [width, setWidth] = (0, _react.useState)(0);
  const [height, setHeight] = (0, _react.useState)(0);
  const onLayout = (0, _react.useCallback)(_ref2 => {
    let {
      nativeEvent: {
        layout
      }
    } = _ref2;
    setWidth(Math.round(layout.width));
    setHeight(Math.round(layout.height));
  }, []);
  const pathRange = (0, _react.useMemo)(() => (0, _CreateGraphPath.getGraphPathRange)(allPoints, range), [allPoints, range]);
  const pointsInRange = (0, _react.useMemo)(() => (0, _CreateGraphPath.getPointsInRange)(allPoints, pathRange), [allPoints, pathRange]);
  const path = (0, _react.useMemo)(() => (0, _CreateGraphPath.createGraphPath)({
    pointsInRange: pointsInRange,
    range: pathRange,
    canvasHeight: height,
    canvasWidth: width,
    horizontalPadding: lineThickness,
    verticalPadding: lineThickness
  }), [height, lineThickness, pathRange, pointsInRange, width]);
  const gradientColors = (0, _react.useMemo)(() => [`${(0, _getSixDigitHex.getSixDigitHex)(color)}00`, `${(0, _getSixDigitHex.getSixDigitHex)(color)}ff`], [color]);
  const gradientFrom = (0, _react.useMemo)(() => (0, _reactNativeSkia.vec)(0, 0), []);
  const gradientTo = (0, _react.useMemo)(() => (0, _reactNativeSkia.vec)(width * 0.15, 0), [width]);
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, _extends({}, props, {
    style: style,
    onLayout: onLayout
  }), /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Canvas, {
    style: styles.svg
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Path, {
    path: path,
    strokeWidth: lineThickness,
    color: enableFadeInMask ? undefined : color,
    style: "stroke",
    strokeJoin: "round",
    strokeCap: "round"
  }, enableFadeInMask && /*#__PURE__*/_react.default.createElement(_reactNativeSkia.LinearGradient, {
    start: gradientFrom,
    end: gradientTo,
    colors: gradientColors
  }))));
}

const styles = _reactNative.StyleSheet.create({
  svg: {
    flex: 1
  }
});
//# sourceMappingURL=StaticLineGraph.js.map