"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CIRCLE_RADIUS_MULTIPLIER = exports.CIRCLE_RADIUS = void 0;
exports.SelectionDot = SelectionDot;

var _react = _interopRequireWildcard(require("react"));

var _reactNativeReanimated = require("react-native-reanimated");

var _reactNativeSkia = require("@shopify/react-native-skia");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const CIRCLE_RADIUS = 5;
exports.CIRCLE_RADIUS = CIRCLE_RADIUS;
const CIRCLE_RADIUS_MULTIPLIER = 6;
exports.CIRCLE_RADIUS_MULTIPLIER = CIRCLE_RADIUS_MULTIPLIER;

function SelectionDot(_ref) {
  let {
    isActive,
    color,
    circleX,
    circleY
  } = _ref;
  const circleRadius = (0, _reactNativeReanimated.useSharedValue)(0);
  const circleStrokeRadius = (0, _reactNativeReanimated.useDerivedValue)(() => circleRadius.value * CIRCLE_RADIUS_MULTIPLIER, [circleRadius]);
  const setIsActive = (0, _react.useCallback)(active => {
    circleRadius.value = (0, _reactNativeReanimated.withSpring)(active ? CIRCLE_RADIUS : 0, {
      mass: 1,
      stiffness: 1000,
      damping: 50,
      velocity: 0
    });
  }, [circleRadius]);
  (0, _reactNativeReanimated.useAnimatedReaction)(() => isActive.value, active => {
    (0, _reactNativeReanimated.runOnJS)(setIsActive)(active);
  }, [isActive, setIsActive]);
  return /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Group, null, /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Circle, {
    opacity: 0.05,
    cx: circleX,
    cy: circleY,
    r: circleStrokeRadius,
    color: "#333333"
  }), /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Circle, {
    cx: circleX,
    cy: circleY,
    r: circleRadius,
    color: color
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSkia.Shadow, {
    dx: 0,
    dy: 0,
    color: "rgba(0,0,0,0.5)",
    blur: 4
  })));
}
//# sourceMappingURL=SelectionDot.js.map