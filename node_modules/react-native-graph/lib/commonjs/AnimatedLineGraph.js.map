{"version":3,"sources":["AnimatedLineGraph.tsx"],"names":["INDICATOR_RADIUS","INDICATOR_BORDER_MULTIPLIER","INDICATOR_PULSE_BLUR_RADIUS_SMALL","INDICATOR_PULSE_BLUR_RADIUS_BIG","AnimatedLineGraph","points","allPoints","color","gradientFillColors","lineThickness","range","enableFadeInMask","enablePanGesture","onPointSelected","onGestureStart","onGestureEnd","panGestureDelay","SelectionDot","DefaultSelectionDot","enableIndicator","indicatorPulsating","horizontalPadding","Math","ceil","verticalPadding","TopAxisLabel","BottomAxisLabel","props","width","setWidth","height","setHeight","interpolateProgress","gesture","isActive","x","enabled","holdDuration","circleX","circleY","pathEnd","indicatorRadius","indicatorBorderRadius","value","pulseTrigger","indicatorPulseAnimation","indicatorPulseRadius","indicatorPulseOpacity","positions","min","onLayout","nativeEvent","layout","round","straightLine","path","Skia","Path","Make","moveTo","i","y","cubicTo","paths","gradientPaths","commands","commandsChanged","setCommandsChanged","pointSelectedIndex","pathRange","pointsInRange","drawingWidth","lineWidth","lastPoint","length","max","date","indicatorX","floor","indicatorY","indicatorPulseColor","shouldFillGradient","gradientPath","createGraphPathProps","canvasHeight","canvasWidth","pathNew","gradientPathNew","toCmds","previous","from","to","interpolate","isInterpolatable","mass","stiffness","damping","velocity","gradientColors","stopPulsating","startPulsating","duration","setFingerPoint","fingerX","fingerXInRange","index","pointIndex","current","dataPoint","setFingerX","setIsActive","active","undefined","axisLabelContainerStyle","paddingTop","paddingBottom","indicatorVisible","styles","container","axisRow","svg","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native'\nimport Reanimated, {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n  useDerivedValue,\n  cancelAnimation,\n  withRepeat,\n  withSequence,\n  withTiming,\n  withDelay,\n  withSpring,\n} from 'react-native-reanimated'\nimport { GestureDetector } from 'react-native-gesture-handler'\n\nimport {\n  Canvas,\n  SkPath,\n  LinearGradient,\n  Path,\n  Skia,\n  vec,\n  Group,\n  PathCommand,\n  mix,\n  Circle,\n  Shadow,\n} from '@shopify/react-native-skia'\n\nimport type { AnimatedLineGraphProps } from './LineGraphProps'\nimport { SelectionDot as DefaultSelectionDot } from './SelectionDot'\nimport {\n  createGraphPath,\n  createGraphPathWithGradient,\n  getGraphPathRange,\n  GraphPathRange,\n  getXInRange,\n  getPointsInRange,\n} from './CreateGraphPath'\nimport { getSixDigitHex } from './utils/getSixDigitHex'\nimport { usePanGesture } from './hooks/usePanGesture'\nimport { getYForX } from './GetYForX'\nimport { hexToRgba } from './utils/hexToRgba'\n\nconst INDICATOR_RADIUS = 7\nconst INDICATOR_BORDER_MULTIPLIER = 1.3\nconst INDICATOR_PULSE_BLUR_RADIUS_SMALL =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER\nconst INDICATOR_PULSE_BLUR_RADIUS_BIG =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER + 20\n\nexport function AnimatedLineGraph({\n  points: allPoints,\n  color,\n  gradientFillColors,\n  lineThickness = 3,\n  range,\n  enableFadeInMask,\n  enablePanGesture = false,\n  onPointSelected,\n  onGestureStart,\n  onGestureEnd,\n  panGestureDelay = 300,\n  SelectionDot = DefaultSelectionDot,\n  enableIndicator = false,\n  indicatorPulsating = false,\n  horizontalPadding = enableIndicator\n    ? Math.ceil(INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER)\n    : 0,\n  verticalPadding = lineThickness,\n  TopAxisLabel,\n  BottomAxisLabel,\n  ...props\n}: AnimatedLineGraphProps): React.ReactElement {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const interpolateProgress = useSharedValue(0)\n\n  const { gesture, isActive, x } = usePanGesture({\n    enabled: enablePanGesture,\n    holdDuration: panGestureDelay,\n  })\n  const circleX = useSharedValue(0)\n  const circleY = useSharedValue(0)\n  const pathEnd = useSharedValue(0)\n  const indicatorRadius = useSharedValue(enableIndicator ? INDICATOR_RADIUS : 0)\n  const indicatorBorderRadius = useDerivedValue(\n    () => indicatorRadius.value * INDICATOR_BORDER_MULTIPLIER\n  )\n\n  const pulseTrigger = useDerivedValue(() => (isActive.value ? 1 : 0))\n  const indicatorPulseAnimation = useSharedValue(0)\n  const indicatorPulseRadius = useDerivedValue(() => {\n    if (pulseTrigger.value === 0) {\n      return mix(\n        indicatorPulseAnimation.value,\n        INDICATOR_PULSE_BLUR_RADIUS_SMALL,\n        INDICATOR_PULSE_BLUR_RADIUS_BIG\n      )\n    }\n    return 0\n  })\n  const indicatorPulseOpacity = useDerivedValue(() => {\n    if (pulseTrigger.value === 0) {\n      return mix(indicatorPulseAnimation.value, 1, 0)\n    }\n    return 0\n  })\n\n  const positions = useDerivedValue(() => [\n    0,\n    Math.min(0.15, pathEnd.value),\n    pathEnd.value,\n    pathEnd.value,\n    1,\n  ])\n\n  const onLayout = useCallback(\n    ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n      setWidth(Math.round(layout.width))\n      setHeight(Math.round(layout.height))\n    },\n    []\n  )\n\n  const straightLine = useMemo(() => {\n    const path = Skia.Path.Make()\n    path.moveTo(0, height / 2)\n    for (let i = 0; i < width - 1; i += 2) {\n      const x = i\n      const y = height / 2\n      path.cubicTo(x, y, x, y, x, y)\n    }\n\n    return path\n  }, [height, width])\n\n  const paths = useSharedValue<{ from?: SkPath; to?: SkPath }>({})\n  const gradientPaths = useSharedValue<{ from?: SkPath; to?: SkPath }>({})\n  const commands = useSharedValue<PathCommand[]>([])\n  const [commandsChanged, setCommandsChanged] = useState(0)\n  const pointSelectedIndex = useRef<number>()\n\n  const pathRange: GraphPathRange = useMemo(\n    () => getGraphPathRange(allPoints, range),\n    [allPoints, range]\n  )\n\n  const pointsInRange = useMemo(\n    () => getPointsInRange(allPoints, pathRange),\n    [allPoints, pathRange]\n  )\n\n  const drawingWidth = useMemo(\n    () => width - 2 * horizontalPadding,\n    [horizontalPadding, width]\n  )\n\n  const lineWidth = useMemo(() => {\n    const lastPoint = pointsInRange[pointsInRange.length - 1]\n\n    if (lastPoint == null) return drawingWidth\n\n    return Math.max(getXInRange(drawingWidth, lastPoint.date, pathRange.x), 0)\n  }, [drawingWidth, pathRange.x, pointsInRange])\n\n  const indicatorX = useDerivedValue(\n    () => Math.floor(lineWidth) + horizontalPadding\n  )\n  const indicatorY = useDerivedValue(\n    () => getYForX(commands.value, indicatorX.value) || 0\n  )\n\n  const indicatorPulseColor = useMemo(() => hexToRgba(color, 0.4), [color])\n\n  const shouldFillGradient = gradientFillColors != null\n\n  useEffect(() => {\n    if (height < 1 || width < 1) {\n      // view is not yet measured!\n      return\n    }\n    if (pointsInRange.length < 1) {\n      // points are still empty!\n      return\n    }\n\n    let path\n    let gradientPath\n\n    const createGraphPathProps = {\n      pointsInRange,\n      range: pathRange,\n      horizontalPadding,\n      verticalPadding,\n      canvasHeight: height,\n      canvasWidth: width,\n    }\n\n    if (shouldFillGradient) {\n      const { path: pathNew, gradientPath: gradientPathNew } =\n        createGraphPathWithGradient(createGraphPathProps)\n\n      path = pathNew\n      gradientPath = gradientPathNew\n    } else {\n      path = createGraphPath(createGraphPathProps)\n    }\n\n    commands.value = path.toCmds()\n\n    if (gradientPath != null) {\n      const previous = gradientPaths.value\n      let from: SkPath = previous.to ?? straightLine\n      if (previous.from != null && interpolateProgress.value < 1)\n        from =\n          from.interpolate(previous.from, interpolateProgress.value) ?? from\n\n      if (gradientPath.isInterpolatable(from)) {\n        gradientPaths.value = {\n          from,\n          to: gradientPath,\n        }\n      } else {\n        gradientPaths.value = {\n          from: gradientPath,\n          to: gradientPath,\n        }\n      }\n    }\n\n    const previous = paths.value\n    let from: SkPath = previous.to ?? straightLine\n    if (previous.from != null && interpolateProgress.value < 1)\n      from = from.interpolate(previous.from, interpolateProgress.value) ?? from\n\n    if (path.isInterpolatable(from)) {\n      paths.value = {\n        from,\n        to: path,\n      }\n    } else {\n      paths.value = {\n        from: path,\n        to: path,\n      }\n    }\n\n    setCommandsChanged(commandsChanged + 1)\n\n    interpolateProgress.value = withSpring(1, {\n      mass: 1,\n      stiffness: 500,\n      damping: 400,\n      velocity: 0,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    height,\n    horizontalPadding,\n    interpolateProgress,\n    pathRange,\n    paths,\n    shouldFillGradient,\n    gradientPaths,\n    pointsInRange,\n    range,\n    straightLine,\n    verticalPadding,\n    width,\n  ])\n\n  const gradientColors = useMemo(() => {\n    if (enableFadeInMask) {\n      return [\n        `${getSixDigitHex(color)}00`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}33`,\n        `${getSixDigitHex(color)}33`,\n      ]\n    }\n    return [\n      color,\n      color,\n      color,\n      `${getSixDigitHex(color)}33`,\n      `${getSixDigitHex(color)}33`,\n    ]\n  }, [color, enableFadeInMask])\n\n  const path = useDerivedValue(\n    () => {\n      const from = paths.value.from ?? straightLine\n      const to = paths.value.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.value)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const gradientPath = useDerivedValue(\n    () => {\n      const from = gradientPaths.value.from ?? straightLine\n      const to = gradientPaths.value.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.value)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const stopPulsating = useCallback(() => {\n    cancelAnimation(indicatorPulseAnimation)\n    indicatorPulseAnimation.value = 0\n  }, [indicatorPulseAnimation])\n\n  const startPulsating = useCallback(() => {\n    indicatorPulseAnimation.value = withRepeat(\n      withDelay(\n        1000,\n        withSequence(\n          withTiming(1, { duration: 1100 }),\n          withTiming(0, { duration: 0 }), // revert to 0\n          withTiming(0, { duration: 1200 }), // delay between pulses\n          withTiming(1, { duration: 1100 }),\n          withTiming(1, { duration: 2000 }) // delay after both pulses\n        )\n      ),\n      -1\n    )\n  }, [indicatorPulseAnimation])\n\n  const setFingerPoint = useCallback(\n    (fingerX: number) => {\n      const fingerXInRange = Math.max(fingerX - horizontalPadding, 0)\n\n      const index = Math.round(\n        (fingerXInRange /\n          getXInRange(\n            drawingWidth,\n            pointsInRange[pointsInRange.length - 1]!.date,\n            pathRange.x\n          )) *\n          (pointsInRange.length - 1)\n      )\n      const pointIndex = Math.min(Math.max(index, 0), pointsInRange.length - 1)\n\n      if (pointSelectedIndex.current !== pointIndex) {\n        const dataPoint = pointsInRange[pointIndex]\n        pointSelectedIndex.current = pointIndex\n\n        if (dataPoint != null) {\n          onPointSelected?.(dataPoint)\n        }\n      }\n    },\n    [\n      drawingWidth,\n      horizontalPadding,\n      onPointSelected,\n      pathRange.x,\n      pointsInRange,\n    ]\n  )\n\n  const setFingerX = useCallback(\n    (fingerX: number) => {\n      'worklet'\n\n      const y = getYForX(commands.value, fingerX)\n\n      if (y != null) {\n        circleX.value = fingerX\n        circleY.value = y\n      }\n\n      if (isActive.value) pathEnd.value = fingerX / width\n    },\n    // pathRange.x must be extra included in deps otherwise onPointSelected doesn't work, IDK why\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [circleX, circleY, isActive, pathEnd, pathRange.x, width, commands]\n  )\n\n  const setIsActive = useCallback(\n    (active: boolean) => {\n      indicatorRadius.value = withSpring(!active ? INDICATOR_RADIUS : 0, {\n        mass: 1,\n        stiffness: 1000,\n        damping: 50,\n        velocity: 0,\n      })\n\n      if (active) {\n        onGestureStart?.()\n        stopPulsating()\n      } else {\n        onGestureEnd?.()\n        pointSelectedIndex.current = undefined\n        pathEnd.value = 1\n        startPulsating()\n      }\n    },\n    [\n      indicatorRadius,\n      onGestureEnd,\n      onGestureStart,\n      pathEnd,\n      startPulsating,\n      stopPulsating,\n    ]\n  )\n\n  useAnimatedReaction(\n    () => x.value,\n    (fingerX) => {\n      if (isActive.value || fingerX) {\n        setFingerX(fingerX)\n        runOnJS(setFingerPoint)(fingerX)\n      }\n    },\n    [isActive, setFingerX, width, x]\n  )\n\n  useAnimatedReaction(\n    () => isActive.value,\n    (active) => {\n      runOnJS(setIsActive)(active)\n    },\n    [isActive, setIsActive]\n  )\n\n  useEffect(() => {\n    if (pointsInRange.length !== 0 && commands.value.length !== 0)\n      pathEnd.value = 1\n  }, [commands, pathEnd, pointsInRange.length])\n\n  useEffect(() => {\n    if (indicatorPulsating) {\n      startPulsating()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [indicatorPulsating])\n\n  const axisLabelContainerStyle = {\n    paddingTop: TopAxisLabel != null ? 20 : 0,\n    paddingBottom: BottomAxisLabel != null ? 20 : 0,\n  }\n\n  const indicatorVisible = enableIndicator && commandsChanged > 0\n\n  return (\n    <View {...props}>\n      <GestureDetector gesture={gesture}>\n        <Reanimated.View style={[styles.container, axisLabelContainerStyle]}>\n          {/* Top Label (max price) */}\n          {TopAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <TopAxisLabel />\n            </View>\n          )}\n\n          {/* Actual Skia Graph */}\n          <View style={styles.container} onLayout={onLayout}>\n            {/* Fix for react-native-skia's incorrect type declarations */}\n            <Canvas style={styles.svg}>\n              <Group>\n                <Path\n                  // @ts-expect-error\n                  path={path}\n                  strokeWidth={lineThickness}\n                  style=\"stroke\"\n                  strokeJoin=\"round\"\n                  strokeCap=\"round\"\n                >\n                  <LinearGradient\n                    start={vec(0, 0)}\n                    end={vec(width, 0)}\n                    colors={gradientColors}\n                    positions={positions}\n                  />\n                </Path>\n\n                {shouldFillGradient && (\n                  <Path\n                    // @ts-expect-error\n                    path={gradientPath}\n                  >\n                    <LinearGradient\n                      start={vec(0, 0)}\n                      end={vec(0, height)}\n                      colors={gradientFillColors}\n                    />\n                  </Path>\n                )}\n              </Group>\n\n              {SelectionDot != null && (\n                <SelectionDot\n                  isActive={isActive}\n                  color={color}\n                  lineThickness={lineThickness}\n                  circleX={circleX}\n                  circleY={circleY}\n                />\n              )}\n\n              {indicatorVisible && (\n                <Group>\n                  {indicatorPulsating && (\n                    <Circle\n                      cx={indicatorX}\n                      cy={indicatorY}\n                      r={indicatorPulseRadius}\n                      opacity={indicatorPulseOpacity}\n                      color={indicatorPulseColor}\n                      style=\"fill\"\n                    />\n                  )}\n\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorBorderRadius}\n                    color=\"#ffffff\"\n                  >\n                    <Shadow dx={2} dy={2} color=\"rgba(0,0,0,0.2)\" blur={4} />\n                  </Circle>\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorRadius}\n                    color={color}\n                  />\n                </Group>\n              )}\n            </Canvas>\n          </View>\n\n          {/* Bottom Label (min price) */}\n          {BottomAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <BottomAxisLabel />\n            </View>\n          )}\n        </Reanimated.View>\n      </GestureDetector>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  svg: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  axisRow: {\n    height: 17,\n  },\n})\n"]}