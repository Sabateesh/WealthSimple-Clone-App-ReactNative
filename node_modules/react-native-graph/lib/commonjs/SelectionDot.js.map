{"version":3,"sources":["SelectionDot.tsx"],"names":["CIRCLE_RADIUS","CIRCLE_RADIUS_MULTIPLIER","SelectionDot","isActive","color","circleX","circleY","circleRadius","circleStrokeRadius","value","setIsActive","active","mass","stiffness","damping","velocity"],"mappings":";;;;;;;;AAAA;;AACA;;AAOA;;;;;;AAGO,MAAMA,aAAa,GAAG,CAAtB;;AACA,MAAMC,wBAAwB,GAAG,CAAjC;;;AAEA,SAASC,YAAT,OAKmC;AAAA,MALb;AAC3BC,IAAAA,QAD2B;AAE3BC,IAAAA,KAF2B;AAG3BC,IAAAA,OAH2B;AAI3BC,IAAAA;AAJ2B,GAKa;AACxC,QAAMC,YAAY,GAAG,2CAAe,CAAf,CAArB;AACA,QAAMC,kBAAkB,GAAG,4CACzB,MAAMD,YAAY,CAACE,KAAb,GAAqBR,wBADF,EAEzB,CAACM,YAAD,CAFyB,CAA3B;AAKA,QAAMG,WAAW,GAAG,wBACjBC,MAAD,IAAqB;AACnBJ,IAAAA,YAAY,CAACE,KAAb,GAAqB,uCAAWE,MAAM,GAAGX,aAAH,GAAmB,CAApC,EAAuC;AAC1DY,MAAAA,IAAI,EAAE,CADoD;AAE1DC,MAAAA,SAAS,EAAE,IAF+C;AAG1DC,MAAAA,OAAO,EAAE,EAHiD;AAI1DC,MAAAA,QAAQ,EAAE;AAJgD,KAAvC,CAArB;AAMD,GARiB,EASlB,CAACR,YAAD,CATkB,CAApB;AAYA,kDACE,MAAMJ,QAAQ,CAACM,KADjB,EAEGE,MAAD,IAAY;AACV,wCAAQD,WAAR,EAAqBC,MAArB;AACD,GAJH,EAKE,CAACR,QAAD,EAAWO,WAAX,CALF;AAQA,sBACE,6BAAC,sBAAD,qBACE,6BAAC,uBAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,EAAE,EAAEL,OAFN;AAGE,IAAA,EAAE,EAAEC,OAHN;AAIE,IAAA,CAAC,EAAEE,kBAJL;AAKE,IAAA,KAAK,EAAC;AALR,IADF,eAQE,6BAAC,uBAAD;AAAQ,IAAA,EAAE,EAAEH,OAAZ;AAAqB,IAAA,EAAE,EAAEC,OAAzB;AAAkC,IAAA,CAAC,EAAEC,YAArC;AAAmD,IAAA,KAAK,EAAEH;AAA1D,kBACE,6BAAC,uBAAD;AAAQ,IAAA,EAAE,EAAE,CAAZ;AAAe,IAAA,EAAE,EAAE,CAAnB;AAAsB,IAAA,KAAK,EAAC,iBAA5B;AAA8C,IAAA,IAAI,EAAE;AAApD,IADF,CARF,CADF;AAcD","sourcesContent":["import React, { useCallback } from 'react'\nimport {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n  withSpring,\n  useDerivedValue,\n} from 'react-native-reanimated'\nimport { Circle, Group, Shadow } from '@shopify/react-native-skia'\nimport type { SelectionDotProps } from './LineGraphProps'\n\nexport const CIRCLE_RADIUS = 5\nexport const CIRCLE_RADIUS_MULTIPLIER = 6\n\nexport function SelectionDot({\n  isActive,\n  color,\n  circleX,\n  circleY,\n}: SelectionDotProps): React.ReactElement {\n  const circleRadius = useSharedValue(0)\n  const circleStrokeRadius = useDerivedValue(\n    () => circleRadius.value * CIRCLE_RADIUS_MULTIPLIER,\n    [circleRadius]\n  )\n\n  const setIsActive = useCallback(\n    (active: boolean) => {\n      circleRadius.value = withSpring(active ? CIRCLE_RADIUS : 0, {\n        mass: 1,\n        stiffness: 1000,\n        damping: 50,\n        velocity: 0,\n      })\n    },\n    [circleRadius]\n  )\n\n  useAnimatedReaction(\n    () => isActive.value,\n    (active) => {\n      runOnJS(setIsActive)(active)\n    },\n    [isActive, setIsActive]\n  )\n\n  return (\n    <Group>\n      <Circle\n        opacity={0.05}\n        cx={circleX}\n        cy={circleY}\n        r={circleStrokeRadius}\n        color=\"#333333\"\n      />\n      <Circle cx={circleX} cy={circleY} r={circleRadius} color={color}>\n        <Shadow dx={0} dy={0} color=\"rgba(0,0,0,0.5)\" blur={4} />\n      </Circle>\n    </Group>\n  )\n}\n"]}