{"version":3,"names":["_Host","require","_JsiSkMatrix","_JsiSkShader","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","toBase64String","bytes","Buffer","from","toString","CHUNK_SIZE","index","length","result","slice","Math","min","fromCharCode","apply","btoa","exports","JsiSkImage","HostObject","constructor","CanvasKit","ref","releaseCtx","delete","height","width","getImageInfo","info","colorType","alphaType","makeShaderOptions","tx","ty","fm","mm","localMatrix","JsiSkShader","getEnum","TileMode","FilterMode","MipmapMode","JsiSkMatrix","fromValue","undefined","makeShaderCubic","B","C","encodeToBytes","fmt","quality","ImageFormat","Error","encodeToBase64","readPixels","srcX","srcY","imageInfo","_imageInfo$width","_imageInfo$height","pxInfo","colorSpace","ColorSpace","SRGB","AlphaType","ColorType","makeNonTextureImage","partialInfo","getColorSpace","pixelLen","pixelPtr","Malloc","Uint8Array","pixels","img","MakeImage","Free"],"sources":["JsiSkImage.ts"],"sourcesContent":["import type {\n  CanvasKit,\n  ImageInfo as CKImageInfo,\n  Image,\n} from \"canvaskit-wasm\";\n\nimport type {\n  FilterMode,\n  MipmapMode,\n  SkImage,\n  SkMatrix,\n  SkShader,\n  TileMode,\n  ImageFormat,\n  ImageInfo,\n} from \"../types\";\n\nimport { getEnum, HostObject } from \"./Host\";\nimport { JsiSkMatrix } from \"./JsiSkMatrix\";\nimport { JsiSkShader } from \"./JsiSkShader\";\n\n// https://github.com/google/skia/blob/1f193df9b393d50da39570dab77a0bb5d28ec8ef/modules/canvaskit/htmlcanvas/util.js\nexport const toBase64String = (bytes: Uint8Array) => {\n  if (typeof Buffer !== \"undefined\") {\n    // Are we on node?\n    return Buffer.from(bytes).toString(\"base64\");\n  } else {\n    // From https://stackoverflow.com/a/25644409\n    // because the naive solution of\n    //     btoa(String.fromCharCode.apply(null, bytes));\n    // would occasionally throw \"Maximum call stack size exceeded\"\n    var CHUNK_SIZE = 0x8000; //arbitrary number\n    var index = 0;\n    var { length } = bytes;\n    var result = \"\";\n    var slice;\n    while (index < length) {\n      slice = bytes.slice(index, Math.min(index + CHUNK_SIZE, length));\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      result += String.fromCharCode.apply(null, slice as any);\n      index += CHUNK_SIZE;\n    }\n    return btoa(result);\n  }\n};\n\nexport class JsiSkImage extends HostObject<Image, \"Image\"> implements SkImage {\n  constructor(\n    CanvasKit: CanvasKit,\n    ref: Image,\n    private releaseCtx?: () => void\n  ) {\n    super(CanvasKit, ref, \"Image\");\n  }\n\n  height() {\n    return this.ref.height();\n  }\n\n  width() {\n    return this.ref.width();\n  }\n\n  getImageInfo(): ImageInfo {\n    const info = this.ref.getImageInfo();\n    return {\n      width: info.width,\n      height: info.height,\n      colorType: info.colorType.value,\n      alphaType: info.alphaType.value,\n    };\n  }\n\n  makeShaderOptions(\n    tx: TileMode,\n    ty: TileMode,\n    fm: FilterMode,\n    mm: MipmapMode,\n    localMatrix?: SkMatrix\n  ): SkShader {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.ref.makeShaderOptions(\n        getEnum(this.CanvasKit.TileMode, tx),\n        getEnum(this.CanvasKit.TileMode, ty),\n        getEnum(this.CanvasKit.FilterMode, fm),\n        getEnum(this.CanvasKit.MipmapMode, mm),\n        localMatrix ? JsiSkMatrix.fromValue(localMatrix) : undefined\n      )\n    );\n  }\n\n  makeShaderCubic(\n    tx: TileMode,\n    ty: TileMode,\n    B: number,\n    C: number,\n    localMatrix?: SkMatrix\n  ): SkShader {\n    return new JsiSkShader(\n      this.CanvasKit,\n      this.ref.makeShaderCubic(\n        getEnum(this.CanvasKit.TileMode, tx),\n        getEnum(this.CanvasKit.TileMode, ty),\n        B,\n        C,\n        localMatrix ? JsiSkMatrix.fromValue(localMatrix) : undefined\n      )\n    );\n  }\n\n  encodeToBytes(fmt?: ImageFormat, quality?: number) {\n    let result: Uint8Array | null;\n    if (fmt && quality) {\n      result = this.ref.encodeToBytes(\n        getEnum(this.CanvasKit.ImageFormat, fmt),\n        quality\n      );\n    } else if (fmt) {\n      result = this.ref.encodeToBytes(getEnum(this.CanvasKit.ImageFormat, fmt));\n    } else {\n      result = this.ref.encodeToBytes();\n    }\n    if (!result) {\n      throw new Error(\"encodeToBytes failed\");\n    }\n    return result;\n  }\n\n  encodeToBase64(fmt?: ImageFormat, quality?: number) {\n    const bytes = this.encodeToBytes(fmt, quality);\n    return toBase64String(bytes);\n  }\n\n  // TODO: this is leaking on Web\n  // Add signature with allocated buffer\n  readPixels(srcX?: number, srcY?: number, imageInfo?: ImageInfo) {\n    const info = this.getImageInfo();\n    const pxInfo: CKImageInfo = {\n      colorSpace: this.CanvasKit.ColorSpace.SRGB,\n      width: imageInfo?.width ?? info.width,\n      height: imageInfo?.height ?? info.height,\n      alphaType: getEnum(\n        this.CanvasKit.AlphaType,\n        (imageInfo ?? info).alphaType\n      ),\n      colorType: getEnum(\n        this.CanvasKit.ColorType,\n        (imageInfo ?? info).colorType\n      ),\n    };\n    return this.ref.readPixels(srcX ?? 0, srcY ?? 0, pxInfo);\n  }\n\n  dispose = () => {\n    this.ref.delete();\n    if (this.releaseCtx) {\n      this.releaseCtx();\n    }\n  };\n\n  makeNonTextureImage(): SkImage {\n    const partialInfo = this.ref.getImageInfo();\n    const colorSpace = this.ref.getColorSpace();\n    const info = {\n      ...partialInfo,\n      colorSpace,\n    };\n\n    var pixelLen = info.width * info.height * 4;\n    const pixelPtr = this.CanvasKit.Malloc(Uint8Array, pixelLen);\n    const pixels = this.ref.readPixels(\n      0,\n      0,\n      info,\n      pixelPtr,\n      info.width * 4\n    ) as Uint8Array | null;\n    if (!pixels) {\n      throw new Error(\"Could not create image from bytes\");\n    }\n    const img = this.CanvasKit.MakeImage(info, pixels, info.width * 4);\n    if (!img) {\n      throw new Error(\"Could not create image from bytes\");\n    }\n    return new JsiSkImage(this.CanvasKit, img, () => {\n      this.CanvasKit.Free(pixelPtr);\n    });\n  }\n}\n"],"mappings":"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"}